/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Ator;
import model.CasoDeUso;

/**
 *
 * @author Antonio
 */
public class MainView extends javax.swing.JFrame {
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        //initElements();
    }
    
    public MainView(String nomeDiagrama){
        super();
        initComponents();
        initElements();
        tabPane.setTitleAt(0, nomeDiagrama);
    }
  
    private void initElements(){     
        
        panel.setBorder(new EmptyBorder(5, 5, 5, 5));
        panel.setLayout(null);     
        panel.setBackground(Color.WHITE);       

        this.setTitle("Criar Diagrama de Caso de Uso");        
        this.setSize(screenSize);             
        this.setLocationRelativeTo(null);        
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        
        this.setVisible(true); 
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        panelObjects = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        casoDeUso = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tabPane = new javax.swing.JTabbedPane();
        panel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuNovo = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();
        menuImportar = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelObjects.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Ator");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        casoDeUso.setText("CasoDeUso");
        casoDeUso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casoDeUsoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelObjectsLayout = new javax.swing.GroupLayout(panelObjects);
        panelObjects.setLayout(panelObjectsLayout);
        panelObjectsLayout.setHorizontalGroup(
            panelObjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelObjectsLayout.createSequentialGroup()
                .addGroup(panelObjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(casoDeUso))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        panelObjectsLayout.setVerticalGroup(
            panelObjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelObjectsLayout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(casoDeUso)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setText("Palettas");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );

        tabPane.addTab("tab1", panel);

        jMenu1.setText("Arquivo");

        menuNovo.setText("Novo Modelo");
        menuNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovoActionPerformed(evt);
            }
        });
        jMenu1.add(menuNovo);

        menuSalvar.setText("Salvar Modelo");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(menuSalvar);

        menuImportar.setText("Importar Modelo");
        menuImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuImportarActionPerformed(evt);
            }
        });
        jMenu1.add(menuImportar);

        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        jMenu1.add(menuSair);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelObjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(41, 41, 41)
                .addComponent(tabPane)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelObjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limparTela(){
        System.out.println("Limpar Tela");
        panel.removeAll();
        updateUI();
    }
    
    private void updateUI(){
        panel.updateUI();
    }
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        System.out.println("Ator");
        Ator ator = new Ator();
        panel.add(ator);
        updateUI();
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void casoDeUsoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casoDeUsoMouseClicked
        System.out.println("Caso de Uso");
        CasoDeUso casoDeUso = new CasoDeUso();
        panel.add(casoDeUso);
        updateUI();
    }//GEN-LAST:event_casoDeUsoMouseClicked

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuImportarActionPerformed
        System.out.println("Importar Arquivo");
        JFileChooser carregarArquivo  = new JFileChooser();
        String nomeArquivo = "";
        carregarArquivo.setApproveButtonText("Escolher arquivo");
        carregarArquivo.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter fileNameExtensionFilter = new FileNameExtensionFilter("CONFIG", "config");
        carregarArquivo.setFileFilter(fileNameExtensionFilter);
        File arquivo;
        switch (carregarArquivo.showOpenDialog(MainView.this)){
            case JFileChooser.APPROVE_OPTION:
                System.out.println(carregarArquivo.getSelectedFile().toPath());
                arquivo = carregarArquivo.getSelectedFile();
                nomeArquivo = carregarArquivo.getSelectedFile().getName();
                System.out.println("Nome arquivo: " + nomeArquivo.replace(".config", ""));
                tabPane.setTitleAt(0, nomeArquivo.replace(".config", ""));
                 
                BufferedReader in = null;
                try{
                    in = new BufferedReader(new FileReader(arquivo));
                    String line = null;
                    String titulo = in.readLine();
                    carregarTitulo(titulo);
                    while((line = in.readLine()) != null){
                        carregarElemento(line);
                    }
                    }catch(Exception ex){
                        ex.printStackTrace();
                    }finally{                    
                        try {
                            in.close();
                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }
                    }
        }
    }//GEN-LAST:event_menuImportarActionPerformed

    private void menuNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovoActionPerformed
        String resposta = JOptionPane.showInputDialog(null, "Escolha o nome do novo arquivo");
        System.out.println("Resposta: " + resposta);
        tabPane.setTitleAt(0, resposta);
    }//GEN-LAST:event_menuNovoActionPerformed

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        System.out.println("Menu salvar");
        if (panel.getComponents().length < 1){
            JOptionPane.showMessageDialog(null, "Não há elementos para salvar");
        
        }
        else{
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja salvar: " + tabPane.getTitleAt(0));
            if ( resposta == JOptionPane.YES_OPTION ){
                List<Ator> listaAtores = new ArrayList<Ator>();
                List<CasoDeUso> listaCasosDeUso = new ArrayList<CasoDeUso>();
                System.out.println("Quantidade de elementos: " + panel.getComponents().length);
                for(Component component: panel.getComponents()){
                    System.out.println(component.getClass());
                    if(component instanceof Ator){
                        Ator ator = (Ator) component;

                        ator.setInitiPos(new Point(ator.getX(), ator.getY()));
                        listaAtores.add(ator);
                    }
                    if(component instanceof CasoDeUso){
                        CasoDeUso casoDeUso = (CasoDeUso) component;

                        casoDeUso.setInitiPos(new Point(casoDeUso.getX(), casoDeUso.getY()));
                        listaCasosDeUso.add(casoDeUso);
                    }

                }

                System.out.println("Lista de Elementos");
                for(Ator ator: listaAtores){
                    System.out.println("X: " + ator.getInitiPos().x + " Y: " + ator.getInitiPos().y);
                }
                for(CasoDeUso caso: listaCasosDeUso){
                    System.out.println("X: " + caso.getInitiPos().x + " Y: " + caso.getInitiPos().y);
                }
                JFileChooser chooser = new JFileChooser();
                chooser.setCurrentDirectory(new java.io.File("."));
                File file = new File(tabPane.getTitleAt(0)+".config");
                chooser.setSelectedFile(file);
                chooser.setDialogTitle("Escolha um local para salvar");
                chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                chooser.setAcceptAllFileFilterUsed(false);
                chooser.setFileFilter(new  FileNameExtensionFilter("Config File (*.config)","config"));
                int savedFile = chooser.showSaveDialog(chooser);
                if (savedFile == JFileChooser.APPROVE_OPTION) {
                    System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
                    System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
                    try {
                        BufferedWriter writer = new BufferedWriter(new FileWriter(file));
                        writer.write(tabPane.getTitleAt(0)+ "\n");
                        for(Ator ator: listaAtores){
                            String output = "Ator, " + ator.getInitiPos().x + " ," + ator.getInitiPos().y + "\n";
                            writer.write(output);
                        }
                        for(CasoDeUso casoDeUso: listaCasosDeUso){
                            String output = "CasoDeUso, " + casoDeUso.getInitiPos().x + " ," + casoDeUso.getInitiPos().y + "\n";
                            writer.write(output);
                        }
                        writer.close();
                        limparTela();
                    } catch (IOException ex) {
                        Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } 
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void carregarTitulo(String tituloDiagrama){
        System.out.println("Titulo: " + tituloDiagrama);
        tabPane.setTitleAt(0, tituloDiagrama);
    }
    private void carregarElemento(String elementoString){
        String componente = elementoString.split(",")[0].trim();
        String posicaoX = elementoString.split(",")[1].trim();
        String posicaoY = elementoString.split(",")[2].trim();
        System.out.println(componente + " " + posicaoX + " " +posicaoY);
        
        switch(componente){
            case "Ator":
                Ator ator = new Ator();                
                panel.add(ator);
                ator.setLocation(Integer.valueOf(posicaoX), Integer.valueOf(posicaoY));
                updateUI();
                break;
            case "CasoDeUso":
                CasoDeUso casoDeUso = new CasoDeUso();
                panel.add(casoDeUso);
                casoDeUso.setLocation(Integer.valueOf(posicaoX), Integer.valueOf(posicaoY));
                updateUI();
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton casoDeUso;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JMenuItem menuImportar;
    private javax.swing.JMenuItem menuNovo;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelObjects;
    private javax.swing.JTabbedPane tabPane;
    // End of variables declaration//GEN-END:variables
}
